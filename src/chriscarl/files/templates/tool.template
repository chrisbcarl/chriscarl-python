#!/usr/bin/env python
# -*- coding: utf-8 -*-
'''
Author:         Chris Carl
Email:          chrisbcarl@outlook.com
Date:           2022-08-26
Description:

Stub.
'''
# stdlib imports
from __future__ import absolute_import, print_function, division, with_statement  # , unicode_literals
import os
import sys
import logging
import argparse

# third party imports

# project imports
from chriscarl.libraries.stdlib.logging import console_log, create_logger
from chriscarl.libraries.stdlib.argparse import raise_argparse_error
from chriscarl.types import coercers

FILE_RELPATH = 'tests/examples/canonical-app-style.py'
if not hasattr(sys, '_MEIPASS'):
    FILE_PATH = os.path.abspath(__file__)
else:
    FILE_PATH = os.path.abspath(os.path.join(sys._MEIPASS, FILE_RELPATH))  # pylint: disable=no-member
FILE_DIR = os.path.dirname(FILE_PATH)
FILE_NAME = os.path.splitext(os.path.basename(__file__))[0]
THIS_MODULE = sys.modules[__name__]
LOGGER = logging.getLogger(__name__)
LOGGER.addHandler(logging.NullHandler())

# argument defaults
DEFAULT_ARG = True

# tool constants
TOOL_CONSTANT = True


def main(args, loggers=[]):
    for logger in loggers:
        logger.info(' '.join(args.message for i in range(args.times)))


if __name__ == '__main__':
    prog = os.path.splitext(os.path.basename(__file__))[0]
    logger = create_logger(prog, formatting='%(message)s')

    parser = argparse.ArgumentParser(prog, usage=None, epilog=None)
    parser.add_argument('-m', '--message', type=str, default='hi', help='print this')
    parser.add_argument('-t', '--times', type=raise_argparse_error(coercers.type_int), required=True, help='print how many times')
    if len(sys.argv) == 1:
        parser.print_help()
    else:
        args = parser.parse_args()
        main(args, loggers=[logger, LOGGER])
